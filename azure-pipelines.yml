# Only trigger CI builds for the master branch, instead 
# of every branch. You'll automatically be configured to 
# build PRs, but you can't currently control that from the YAML directly
# For details, see https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers
trigger:
  branches:
    include:
    - '*'
    exclude:
    - gh-pages
    - gh-pages-source
  tags:
    include:
      - '*'

# We can run multiple jobs in parallel. For this project
# I'm running Linux, Windows, and macOS jobs. For syntac details
# see https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases
jobs:

# Run a build on macOS at the same time
- job: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '3.0.100-preview9-014004'
  - bash: ./build.sh --target=azure-pipelines
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
  # Can't get this working on OSX builds with the 3.0 target
  #- task: CmdLine@2
  #  inputs:
  #    script: 'dotnet reportgenerator "-reports:$(Build.SourcesDirectory)/coverage/*.xml" "-targetdir:$(Build.SourcesDirectory)/coverage/html" -reporttypes:HtmlInline_AzurePipelines "-assemblyfilters:+LetterAvatars.*"' 
  #    workingDirectory: '$(Build.SourcesDirectory)/test/LetterAvatars.Service.Tests/'
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  #- task: PublishCodeCoverageResults@1
  #  inputs:
  #    codeCoverageTool: 'cobertura'
  #    summaryFileLocation: '$(Build.SourcesDirectory)/coverage/results.cobertura.xml'
  #    reportDirectory: '$(Build.SourcesDirectory)/coverage/html'

# Run a build on Windows at the same time
- job: Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '3.0.100-preview9-014004'
  - powershell: .\build.ps1 -Target azure-pipelines
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
  - task: CmdLine@2
    inputs:
      script: 'dotnet reportgenerator "-reports:$(Build.SourcesDirectory)\coverage\*.xml" "-targetdir:$(Build.SourcesDirectory)\coverage\html" -reporttypes:HtmlInline_AzurePipelines "-assemblyfilters:+LetterAvatars.*"' 
      workingDirectory: '$(Build.SourcesDirectory)\test\LetterAvatars.Service.Tests\'
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)\coverage\results.cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)\coverage\html'