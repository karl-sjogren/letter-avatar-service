import{a as e,b as r,c as a,f as t,d as n,e as o,i as s,g as i,h as c,j as l,k as h,l as v,s as d}from"./chunk.3e4455b7.js";function u(e){var r,a,u,g,p,f,b,m,k,E,y,L,A,S,w,C,T,j,x,F,H,P,D,O,z,I,G,N,R,W,X,q,B,J,K,M,Q,U,V,Y,Z,$,_,ee,re,ae,te,ne,oe,se,ie,ce,le,he;return{c(){r=t(),a=n("h1"),u=o("Installing Letter Avatar Service"),g=t(),p=n("h2"),f=o("Docker"),b=t(),m=n("p"),k=o("The service can be installed in serveral ways. The easiest would be by using the "),E=n("a"),y=o("docker image from Docker Hub"),L=o("."),A=t(),S=n("code"),w=o("docker pull karlsjogren/letter-avatars\ndocker run -d -p 80:80 karlsjogren/letter-avatars"),C=t(),T=n("h2"),j=o("From GitHub release"),x=t(),F=n("p"),H=o("Releases are available over at "),P=n("a"),D=o("GitHub"),O=o(" and are built as Framework-dependent deployment packages."),z=t(),I=n("p"),G=o("To run this .NET Core 3.0 Preview 5 Runtime (or above) has to be available on the system."),N=t(),R=n("p"),W=o("To get it running simply extract the zip file and execute the correct binary depending on your system"),X=t(),q=n("code"),B=o("./LetterAvatarService # For OSX/Linux\ndotnet LetterAvatarService.dll # For Windows"),J=t(),K=n("h2"),M=o("From source"),Q=t(),U=n("p"),V=o("Clone the repository using GIT."),Y=t(),Z=n("code"),$=o("git clone https://github.com/karl-sjogren/letter-avatar-service.git"),_=t(),ee=n("p"),re=o("Or download the latest version as a "),ae=n("a"),te=o("zip-file"),ne=o(" and unzip it."),oe=t(),se=n("p"),ie=o("Change into the LetterAvatarService folder and execute it using .Net CLI."),ce=t(),le=n("code"),he=o("cd src/LetterAvatarService\ndotnet run"),this.h()},l(e){r=s(e,"\n\n"),a=i(e,"H1",{},!1);var t=c(a);u=s(t,"Installing Letter Avatar Service"),t.forEach(l),g=s(e,"\n\n"),p=i(e,"H2",{},!1);var n=c(p);f=s(n,"Docker"),n.forEach(l),b=s(e,"\n\n"),m=i(e,"P",{},!1);var o=c(m);k=s(o,"The service can be installed in serveral ways. The easiest would be by using the "),E=i(o,"A",{href:!0},!1);var h=c(E);y=s(h,"docker image from Docker Hub"),h.forEach(l),L=s(o,"."),o.forEach(l),A=s(e,"\n\n"),S=i(e,"CODE",{},!1);var v=c(S);w=s(v,"docker pull karlsjogren/letter-avatars\ndocker run -d -p 80:80 karlsjogren/letter-avatars"),v.forEach(l),C=s(e,"\n\n"),T=i(e,"H2",{},!1);var d=c(T);j=s(d,"From GitHub release"),d.forEach(l),x=s(e,"\n\n"),F=i(e,"P",{},!1);var ve=c(F);H=s(ve,"Releases are available over at "),P=i(ve,"A",{href:!0},!1);var de=c(P);D=s(de,"GitHub"),de.forEach(l),O=s(ve," and are built as Framework-dependent deployment packages."),ve.forEach(l),z=s(e,"\n\n"),I=i(e,"P",{},!1);var ue=c(I);G=s(ue,"To run this .NET Core 3.0 Preview 5 Runtime (or above) has to be available on the system."),ue.forEach(l),N=s(e,"\n\n"),R=i(e,"P",{},!1);var ge=c(R);W=s(ge,"To get it running simply extract the zip file and execute the correct binary depending on your system"),ge.forEach(l),X=s(e,"\n\n"),q=i(e,"CODE",{},!1);var pe=c(q);B=s(pe,"./LetterAvatarService # For OSX/Linux\ndotnet LetterAvatarService.dll # For Windows"),pe.forEach(l),J=s(e,"\n\n"),K=i(e,"H2",{},!1);var fe=c(K);M=s(fe,"From source"),fe.forEach(l),Q=s(e,"\n\n"),U=i(e,"P",{},!1);var be=c(U);V=s(be,"Clone the repository using GIT."),be.forEach(l),Y=s(e,"\n\n"),Z=i(e,"CODE",{},!1);var me=c(Z);$=s(me,"git clone https://github.com/karl-sjogren/letter-avatar-service.git"),me.forEach(l),_=s(e,"\n\n"),ee=i(e,"P",{},!1);var ke=c(ee);re=s(ke,"Or download the latest version as a "),ae=i(ke,"A",{href:!0},!1);var Ee=c(ae);te=s(Ee,"zip-file"),Ee.forEach(l),ne=s(ke," and unzip it."),ke.forEach(l),oe=s(e,"\n\n"),se=i(e,"P",{},!1);var ye=c(se);ie=s(ye,"Change into the LetterAvatarService folder and execute it using .Net CLI."),ye.forEach(l),ce=s(e,"\n\n"),le=i(e,"CODE",{},!1);var Le=c(le);he=s(Le,"cd src/LetterAvatarService\ndotnet run"),Le.forEach(l),this.h()},h(){document.title="Installing Letter Avatar Service",E.href="https://hub.docker.com/r/karlsjogren/letter-avatars",P.href="https://github.com/karl-sjogren/letter-avatar-service/releases",ae.href="https://github.com/karl-sjogren/letter-avatar-service/archive/master.zip"},m(e,t){h(e,r,t),h(e,a,t),v(a,u),h(e,g,t),h(e,p,t),v(p,f),h(e,b,t),h(e,m,t),v(m,k),v(m,E),v(E,y),v(m,L),h(e,A,t),h(e,S,t),v(S,w),h(e,C,t),h(e,T,t),v(T,j),h(e,x,t),h(e,F,t),v(F,H),v(F,P),v(P,D),v(F,O),h(e,z,t),h(e,I,t),v(I,G),h(e,N,t),h(e,R,t),v(R,W),h(e,X,t),h(e,q,t),v(q,B),h(e,J,t),h(e,K,t),v(K,M),h(e,Q,t),h(e,U,t),v(U,V),h(e,Y,t),h(e,Z,t),v(Z,$),h(e,_,t),h(e,ee,t),v(ee,re),v(ee,ae),v(ae,te),v(ee,ne),h(e,oe,t),h(e,se,t),v(se,ie),h(e,ce,t),h(e,le,t),v(le,he)},p:d,i:d,o:d,d(e){e&&(l(r),l(a),l(g),l(p),l(b),l(m),l(A),l(S),l(C),l(T),l(x),l(F),l(z),l(I),l(N),l(R),l(X),l(q),l(J),l(K),l(Q),l(U),l(Y),l(Z),l(_),l(ee),l(oe),l(se),l(ce),l(le))}}}export default class extends e{constructor(e){super(),r(this,e,null,u,a,[])}}
//# sourceMappingURL=installing.9eb4f54f.js.map
